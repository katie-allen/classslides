mtcars
head(mtcars)
str(mtcars)
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)
```{r, echo=FALSE}
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)
library(tidyverse)
head(mtcars)
as_tibble(mtcars)
as_tibble(mtcars[1:10, 1:5])
head(mtcars[1:10, 1:5])
as_tibble(mtcars[1:10, 1:5])
mtcars[1:10, 1:5]
x <- factor(c("ab","cd","ab"))
x
typeof(x)
attributes(x)
sample(5) + 100
?sample
c(1,2,3,4,5) + 100
?read.csv
bls <- read.csv("data/height.csv")
bls <- read.csv("./data/height.csv")
bls <- read.csv("./data/heights.csv")
dat <- read.csv("./data/heights.csv")
head(dat)
?read_csv
dat <- read_csv("./data/heights.csv")
head(dat)
dat <- read.csv("./data/heights.csv")
head(dat)
typeof(dat$sex)
attributes(dat$sex)
dat <- read.csv("./data/heights.csv")
head(dat)
str(dat)
dat$race
class(dat#sex)
class(dat$sex)
typeof(dat$sex)
data_csv <- read_csv("https://github.com/byuistats/data/raw/master/Dart_Expert_Dow_6month_anova/Dart_Expert_Dow_6month_anova.csv")
head(data_csv)
View(data_csv)
# RDS
data_rds <- read_rds(url("https://github.com/byuistats/data/blob/master/Dart_Expert_Dow_6month_anova/Dart_Expert_Dow_6month_anova.RDS?raw=true"))
View(data_rds)
head(data_rds)
head(data_csv)
# csv
#data_csv <- read_csv("https://github.com/byuistats/data/raw/master/Dart_Expert_Dow_6month_anova/Dart_Expert_Dow_6month_anova.csv")
data_csv <- read.csv("https://github.com/byuistats/data/raw/master/Dart_Expert_Dow_6month_anova/Dart_Expert_Dow_6month_anova.csv")
head(data_rds)
head(data_csv)
str(data_csv)
all.equal(data_rds, data_csv)
library(tidyverse)
library(readr)
library(haven)
library(readxl)
library(downloader)
# RDS
dat1 <- read_rds(url("https://github.com/byuistats/data/blob/master/Dart_Expert_Dow_6month_anova/Dart_Expert_Dow_6month_anova.RDS?raw=true"))
# csv
dat2 <- read_csv("https://github.com/byuistats/data/raw/master/Dart_Expert_Dow_6month_anova/Dart_Expert_Dow_6month_anova.csv")
dat3 <- read.csv("https://github.com/byuistats/data/raw/master/Dart_Expert_Dow_6month_anova/Dart_Expert_Dow_6month_anova.csv")
# dta
dat4 <- read_dta(url("https://github.com/byuistats/data/blob/master/Dart_Expert_Dow_6month_anova/Dart_Expert_Dow_6month_anova.dta?raw=true"))
all.equal(dat1, dat2)
all.equal(dat2, dat3)
all.equal(dat3, dat4)
?read.csv
default.stringsAsFactors()
dat <- read.csv("./data/heights.csv", stringsAsFactors = TRUE)
head(dat)
dat <- read.csv("./data/heights.csv", stringsAsFactors = TRUE)
head(dat)
str(dat)
typeof(dat1$contest_period)
# csv
dat2 <- read_csv("https://github.com/byuistats/data/raw/master/Dart_Expert_Dow_6month_anova/Dart_Expert_Dow_6month_anova.csv")
dat3 <- read.csv("https://github.com/byuistats/data/raw/master/Dart_Expert_Dow_6month_anova/Dart_Expert_Dow_6month_anova.csv")
# dta
dat4 <- read_dta(url("https://github.com/byuistats/data/blob/master/Dart_Expert_Dow_6month_anova/Dart_Expert_Dow_6month_anova.dta?raw=true"))
all.equal(dat3, dat4)
dat_csv <- read_csv("https://github.com/byuistats/data/raw/master/Dart_Expert_Dow_6month_anova/Dart_Expert_Dow_6month_anova.csv")
dat_dta <- read_dta(url("https://github.com/byuistats/data/blob/master/Dart_Expert_Dow_6month_anova/Dart_Expert_Dow_6month_anova.dta?raw=true"))
all.equal(dat_csv, dat_dta)
attributes(dat_csv$contest_period)
attributes(dat_dta$contest_period)
str(dat_csv)
str(dat_dta)
?download
?unzip
?read.dbf
library(foreign)
?read.dbf
tempfile()
getwd()
?download
download("https://byuistats.github.io/M335/data/heights/Heights_south-east.zip",
"my_zipped_file.zip")
# then unzip the file
unzip("my_zipped_file.zip")
?upzip
?unzip
library(tidyverse)
library(readr)
library(haven)
library(readxl)
library(downloader)
dat_csv <- read_csv("https://github.com/byuistats/data/raw/master/Dart_Expert_Dow_6month_anova/Dart_Expert_Dow_6month_anova.csv")
dat_dta <- read_dta(url("https://github.com/byuistats/data/blob/master/Dart_Expert_Dow_6month_anova/Dart_Expert_Dow_6month_anova.dta?raw=true"))
all.equal(dat_csv, dat_dta)
attributes(dat_csv$contest_period)
attributes(dat_dta$contest_period)
str(dat_csv)
str(dat_dta)
# download file
download("https://byuistats.github.io/M335/data/heights/Heights_south-east.zip")
?download
# download file
download("https://byuistats.github.io/M335/data/heights/Heights_south-east.zip",
"my_zipped_file.zip")
getwd()
# unzip
?unzip()
unzip("my_zipped_file.zip")
# read in the data
my_data <- read.dbf("B6090.DBF")
download(https://byuistats.github.io/M335/data/heights/germanconscr.dta)
download"(https://byuistats.github.io/M335/data/heights/germanconscr.dta")
download("https://byuistats.github.io/M335/data/heights/germanconscr.dta")
?download
View(dat_csv %>% mutate(Year = 5))
View(dat_csv %>% mutate("Year" = 5))
my_dat <- dat_csv %>% mutate("Year" = 5)
View(my_dat)
my_dat <- dat_csv %>% mutate(Year = 5)
View(my_dat)
?read_sav
?read.dbf
library(haven)
library(tidyverse)
library(readr)
library(foreign)
library(readxl)
library(memisc)
library(haven)
library(tidyverse)
library(readr)
library(foreign)
library(readxl)
library(haven)
library(tidyverse)
library(readr)
library(foreign)
library(readxl)
data_main<- read_sav("http://www.ssc.wisc.edu/nsfh/wave3/NSFH3%20Apr%202005%20release/main05022005.sav")
temp <- data_main %>% mutate(Year = 1900)
View(temp)
# https://ourworldindata.org/grapher/carbon-footprint-travel-mode?tab=chart&stackMode=absolute&region=World
library(tidyverse)
carbon <- read_csv("C:/Users/kalarson/BYUI Version Control/ktoutloud/BYUI-Math335/week06_viz-for-presentation/carbon-footprint-travel-mode.csv")
# a quick bar chart
carbon %>%
ggplot(aes(x = `GHG emissions (gCO2e/km)`, y = Entity)) +
geom_col()
# these are the categories we want in the chart
chart_entities <- c("Domestic flight",
"Medium car (petrol)",
"Medium car (diesel)",
"Short-haul flight (economy)",
"Long-haul flight (economy)",
"Bus",
"Motorcycle (medium)",
"Petrol car, 2 passengers",
"Medium electric vehicle (UK electricity)",
"National rail",
"Ferry (foot passenger)",
"Eurostar (international rail)")
# we need to know the type of transportation for the color
flights <- c("Domestic flight",
"Long-haul flight (economy)",
"Short-haul flight (economy)")
public <- c("Bus",
"National rail",
"Ferry (foot passenger)",
"Eurostar (international rail)")
private <- c("Medium car (diesel)",
"Medium car (petrol)",
"Motorcycle (medium)",
"Petrol car, 2 passengers",
"Medium electric vehicle (UK electricity)")
# create two new columns
carbon <- carbon %>%
mutate(grams = round(`GHG emissions (gCO2e/km)`*1000),
mode = case_when(
Entity %in% flights ~ "flight",
Entity %in% public ~ "public",
Entity %in% private ~ "private",
TRUE ~ "other"
))
carbon %>%
# only keep the categories (entities) shown online
filter(Entity %in% chart_entities) %>%
# the basic bar plot
ggplot(aes(x = grams, y = reorder(Entity, grams), fill = mode)) +
geom_col() +
# remove x and y labels, add title and caption
labs(x = "",
y = "",
title = "Carbon footprint of travel per kilometer, 2018",
subtitle = "The carbon footprint of travel is measured in grams of carbon dioxide equivalents per passenger kilometer. This\nincludes carbon dioxide, but also other greenhouse gases, and increased warming from aviation emissions at altitude.",
caption = "Source: UK Department for Business, Energy & Industrial Strategy. Greenhouse gas reporting: conversion factors 2019.\nNote: Data is based on official conversion factors used in UK reporting. These factors may vary slightly depending on the country, and assumed\noccupancy of public transport such as buses and trains.") +
# this is how you choose your own "fill" colors
scale_fill_manual(values = c("flight" = "#ab3345",
"private" = "#835ca2",
"public" = "#279792")) +
# There is a lot going on here! Most important are the "breaks" and "labels"
scale_x_continuous(breaks = seq(0,250,50),
labels = function(x){paste(x, "g")},
expand = c(0,0),
limits = c(0,275)) +
# this adds a label to the end of each bar
geom_text(aes(label = paste(grams, "g")), nudge_x = 5, size = 3) +
# theme_minimal() was the closest to the online graph...
theme_minimal() +
#....but it wasn't an exact match, so we need to tweak a few things
theme(legend.position = "none",                                # remove the legend
panel.grid = element_blank(),                            # remove all the grid lines
panel.grid.major.x = element_line(linetype = "dotted"),  # add only the major x gridlines
plot.caption = element_text(hjust = 0),                  # move the caption to the left
plot.title.position = "plot",                            # align title with the edge of plot
plot.caption.position = "plot")
# these vectors will help with the graph
flights <- c("Bus",
"Long-haul flight (economy)",
"Short-haul flight (economy)")
public <- c("National rail",
"Ferry (foot passenger)",
"Eurostar (international rail)")
private <- c("Medium car (diesel)",
"Medium car (petrol)",
"Motorcycle (medium)",
"Petrol car, 2 passengers",
"Medium electric vehicle (UK electricity)",
"Domestic flight")
chart_entities <- c("Domestic flight",
"Medium car (petrol)",
"Medium car (diesel)",
"Short-haul flight (economy)",
"Long-haul flight (economy)",
"Bus",
"Taxi",
"Black cab (taxi)",
"Motorcycle (medium)",
"Petrol car, 2 passengers",
"Medium electric vehicle (UK electricity)",
"National rail",
"Ferry (foot passenger)",
"Eurostar (international rail)")
# data wrangling
carbon <- carbon %>%
mutate(grams = round(`GHG emissions (gCO2e/km)`*100),
mode = case_when(
Entity %in% flights ~ "flight",
Entity %in% public ~ "public",
Entity %in% private ~ "private",
TRUE ~ "other"
))
carbon %>%
filter(Entity %in% chart_entities) %>%
# basic plot
ggplot(aes(x = grams, y = reorder(Entity, -grams), color = mode)) +
geom_col() +
# add labels
labs(x = "",
y = "",
title = "Carbon footprint of travel per kilometer, 2018",
subtitle = "",
caption = "Source: UK Department for Business, Energy & Industrial Strategy. Greenhouse gas reporting: conversion factors 2019.\nNote: Data is based on official conversion factors used in UK reporting. These factors may vary slightly depending on the country, and assumed\noccupancy of public transport such as buses and trains.") +
# adjust the color
scale_color_manual(values = c("flight" = "#ab3345",
"private" = "#835ca2",
"public" = "#279792",
"other" = "#d9bd4c")) +
# make sure the x-axis matches
scale_x_continuous(limits = c(0,350),
breaks = seq(0,250,50),
labels = function(x){paste(x, "grams")},
expand = c(0,0)) +
# label each bar
geom_text(aes(label = grams), nudge_x = -20, size = 8) +
# final touches
theme_minimal() +
theme(legend.position = "top",
panel.grid = element_blank(),
panel.grid.major.x = element_line(linetype = "dotted"),
plot.caption = element_text(hjust = 0))
