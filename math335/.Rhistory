mtcars
head(mtcars)
str(mtcars)
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)
```{r, echo=FALSE}
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)
library(tidyverse)
head(mtcars)
as_tibble(mtcars)
as_tibble(mtcars[1:10, 1:5])
head(mtcars[1:10, 1:5])
as_tibble(mtcars[1:10, 1:5])
mtcars[1:10, 1:5]
x <- factor(c("ab","cd","ab"))
x
typeof(x)
attributes(x)
sample(5) + 100
?sample
c(1,2,3,4,5) + 100
?read.csv
bls <- read.csv("data/height.csv")
bls <- read.csv("./data/height.csv")
bls <- read.csv("./data/heights.csv")
dat <- read.csv("./data/heights.csv")
head(dat)
?read_csv
dat <- read_csv("./data/heights.csv")
head(dat)
dat <- read.csv("./data/heights.csv")
head(dat)
typeof(dat$sex)
attributes(dat$sex)
dat <- read.csv("./data/heights.csv")
head(dat)
str(dat)
dat$race
class(dat#sex)
class(dat$sex)
typeof(dat$sex)
data_csv <- read_csv("https://github.com/byuistats/data/raw/master/Dart_Expert_Dow_6month_anova/Dart_Expert_Dow_6month_anova.csv")
head(data_csv)
View(data_csv)
# RDS
data_rds <- read_rds(url("https://github.com/byuistats/data/blob/master/Dart_Expert_Dow_6month_anova/Dart_Expert_Dow_6month_anova.RDS?raw=true"))
View(data_rds)
head(data_rds)
head(data_csv)
# csv
#data_csv <- read_csv("https://github.com/byuistats/data/raw/master/Dart_Expert_Dow_6month_anova/Dart_Expert_Dow_6month_anova.csv")
data_csv <- read.csv("https://github.com/byuistats/data/raw/master/Dart_Expert_Dow_6month_anova/Dart_Expert_Dow_6month_anova.csv")
head(data_rds)
head(data_csv)
str(data_csv)
all.equal(data_rds, data_csv)
library(tidyverse)
library(readr)
library(haven)
library(readxl)
library(downloader)
# RDS
dat1 <- read_rds(url("https://github.com/byuistats/data/blob/master/Dart_Expert_Dow_6month_anova/Dart_Expert_Dow_6month_anova.RDS?raw=true"))
# csv
dat2 <- read_csv("https://github.com/byuistats/data/raw/master/Dart_Expert_Dow_6month_anova/Dart_Expert_Dow_6month_anova.csv")
dat3 <- read.csv("https://github.com/byuistats/data/raw/master/Dart_Expert_Dow_6month_anova/Dart_Expert_Dow_6month_anova.csv")
# dta
dat4 <- read_dta(url("https://github.com/byuistats/data/blob/master/Dart_Expert_Dow_6month_anova/Dart_Expert_Dow_6month_anova.dta?raw=true"))
all.equal(dat1, dat2)
all.equal(dat2, dat3)
all.equal(dat3, dat4)
?read.csv
default.stringsAsFactors()
dat <- read.csv("./data/heights.csv", stringsAsFactors = TRUE)
head(dat)
dat <- read.csv("./data/heights.csv", stringsAsFactors = TRUE)
head(dat)
str(dat)
typeof(dat1$contest_period)
# csv
dat2 <- read_csv("https://github.com/byuistats/data/raw/master/Dart_Expert_Dow_6month_anova/Dart_Expert_Dow_6month_anova.csv")
dat3 <- read.csv("https://github.com/byuistats/data/raw/master/Dart_Expert_Dow_6month_anova/Dart_Expert_Dow_6month_anova.csv")
# dta
dat4 <- read_dta(url("https://github.com/byuistats/data/blob/master/Dart_Expert_Dow_6month_anova/Dart_Expert_Dow_6month_anova.dta?raw=true"))
all.equal(dat3, dat4)
dat_csv <- read_csv("https://github.com/byuistats/data/raw/master/Dart_Expert_Dow_6month_anova/Dart_Expert_Dow_6month_anova.csv")
dat_dta <- read_dta(url("https://github.com/byuistats/data/blob/master/Dart_Expert_Dow_6month_anova/Dart_Expert_Dow_6month_anova.dta?raw=true"))
all.equal(dat_csv, dat_dta)
attributes(dat_csv$contest_period)
attributes(dat_dta$contest_period)
str(dat_csv)
str(dat_dta)
?download
?unzip
?read.dbf
library(foreign)
?read.dbf
tempfile()
getwd()
?download
download("https://byuistats.github.io/M335/data/heights/Heights_south-east.zip",
"my_zipped_file.zip")
# then unzip the file
unzip("my_zipped_file.zip")
?upzip
?unzip
library(tidyverse)
library(readr)
library(haven)
library(readxl)
library(downloader)
dat_csv <- read_csv("https://github.com/byuistats/data/raw/master/Dart_Expert_Dow_6month_anova/Dart_Expert_Dow_6month_anova.csv")
dat_dta <- read_dta(url("https://github.com/byuistats/data/blob/master/Dart_Expert_Dow_6month_anova/Dart_Expert_Dow_6month_anova.dta?raw=true"))
all.equal(dat_csv, dat_dta)
attributes(dat_csv$contest_period)
attributes(dat_dta$contest_period)
str(dat_csv)
str(dat_dta)
# download file
download("https://byuistats.github.io/M335/data/heights/Heights_south-east.zip")
?download
# download file
download("https://byuistats.github.io/M335/data/heights/Heights_south-east.zip",
"my_zipped_file.zip")
getwd()
# unzip
?unzip()
unzip("my_zipped_file.zip")
# read in the data
my_data <- read.dbf("B6090.DBF")
download(https://byuistats.github.io/M335/data/heights/germanconscr.dta)
download"(https://byuistats.github.io/M335/data/heights/germanconscr.dta")
download("https://byuistats.github.io/M335/data/heights/germanconscr.dta")
?download
View(dat_csv %>% mutate(Year = 5))
View(dat_csv %>% mutate("Year" = 5))
my_dat <- dat_csv %>% mutate("Year" = 5)
View(my_dat)
my_dat <- dat_csv %>% mutate(Year = 5)
View(my_dat)
?read_sav
?read.dbf
library(haven)
library(tidyverse)
library(readr)
library(foreign)
library(readxl)
library(memisc)
library(haven)
library(tidyverse)
library(readr)
library(foreign)
library(readxl)
library(haven)
library(tidyverse)
library(readr)
library(foreign)
library(readxl)
data_main<- read_sav("http://www.ssc.wisc.edu/nsfh/wave3/NSFH3%20Apr%202005%20release/main05022005.sav")
temp <- data_main %>% mutate(Year = 1900)
View(temp)
letters
if(!require(pacman)) install.packages("pacman")
pacman::p_load("tidyverse", "USAboundaries", "sf", "ggrepel")
state.name
states_list <- state.name[!(state.name %in% c("Hawaii","Alaska"))]
?us_states
states <- us_states(states = states_list, resolution = "high")
View(states)
glimpse(states)
?us_counties()
?us_cities
states$geometry[1]
cities <- us_cities(states = states_list)
View(cities)
cities <- us_cities(states = states_list) %>%
group_by(state_name) %>%
top_n(3, population) %>%
arrange(desc(population)) %>%
mutate(city_size = row_number()) %>%
ungroup() %>%
arrange(state_name, desc(city_size))
cities$label = ifelse(cities$city_size == 1, cities$city, "")
p <- ggplot() +
geom_sf(data = states, fill = NA) +
geom_sf(data = idaho_counties, fill = NA) +
geom_point(data = cities,
aes(geometry = geometry, x = after_stat(x), y = after_stat(y),
color = city_size, size = population/1000),
stat = "sf_coordinates") +
theme_bw() +
labs(x = element_blank(),
y = element_blank(),
size = "Population\n(1,000)") +
guides(color = FALSE) +
geom_label_repel(data = cities,
aes(geometry = geometry, x = after_stat(x), y = after_stat(y), label = label),
stat = "sf_coordinates",
color = "blue4",
size = 2.2)
idaho_counties <- us_counties(states = "Idaho", resolution = "high")
p <- ggplot() +
geom_sf(data = states, fill = NA) +
geom_sf(data = idaho_counties, fill = NA) +
geom_point(data = cities,
aes(geometry = geometry, x = after_stat(x), y = after_stat(y),
color = city_size, size = population/1000),
stat = "sf_coordinates") +
theme_bw() +
labs(x = element_blank(),
y = element_blank(),
size = "Population\n(1,000)") +
guides(color = FALSE) +
geom_label_repel(data = cities,
aes(geometry = geometry, x = after_stat(x), y = after_stat(y), label = label),
stat = "sf_coordinates",
color = "blue4",
size = 2.2)
p
?geom_sf
ggplot() +
geom_sf(data = states, fill=NA) +
geom_sf(data = idaho_counties, fill = NA) +
geom_sf(data = cities, aes(color = population, size = population)) +
theme_bw()
# can we visualize it?
ggplot() +
geom_sf(data = states, fill = NA)
state.name
state.abbr
state.abb
idaho <- us_states(states = "Idaho")
View(idaho)
idaho$geometry
plot(idaho$geometry)
ggplot() + geom_sf(data = idaho)
x <- 5
class(x)
x <- c(5,8,4)
class(x)
typeof(x)
x <- 5L
class(x)
typeof(x)
x <- c(5,8,7)
x <- c(5,TRUE,"bob")
typeof(x)
x <- list(5,TRUE,"bob")
typeof(x)
class(c)
type(x)
class(x)
attributes(iris)
iris
x <- factor("male", "female", "male")
x
x <- factor(c("male", "female", "male"))
x
x[1] + x[2]
x
as.integer(x)
attributes(x)
x <- factor(c("male","female","female","male","female"))
x
attributes(x)
as.integer(x)
c(x, "bob")
class(iris)
class(iris$Sepal.Length)
typeof(iris)
typeof(iris$Sepal.Length)
mode(iris)
mode(iris$Sepal.Length)
# load packages
library(tidyverse)
# load the data
rcw <- read_csv("https://byuistats.github.io/M335/data/rcw.csv",
col_types = cols(Semester_Date = col_date(format = "%m/%d/%y"),
Semester = col_factor(levels = c("Winter", "Spring", "Fall"))))
ggplot(rcw, aes(x = Semester_Date, y = Count, color = Department)) +
geom_point()
ggplot(rcw, aes(x = Semester_Date, y = Count, color = Department)) +
geom_line()
ggplot(rcw, aes(x = Semester_Date, y = Count, color = Department)) +
geom_point() +
geom_line()
ggplot(rcw, aes(x = Semester_Date, y = Count, color = Department)) +
geom_point() +
geom_line() +
facet_wrap(~ Department, nrow = 2)
ggplot(rcw, aes(x = Semester_Date, y = Count, color = Department)) +
geom_point(show.legend = FALSE) +
geom_line(show.legend = FALSE) +
facet_wrap(~ Department, nrow = 2)
ggplot(rcw, aes(x = Semester_Date, y = Count, color = Department)) +
geom_point(show.legend = FALSE) +
geom_line(show.legend = FALSE) +
facet_wrap(~ Department, nrow = 2) +
scale_x_discrete(breaks = c("2016-04-01", "2016-09-01", "2017-01-01", "2017-04-01", "2017-09-01","2018-01-01"),
labels = c("S16", "F16", "W17", "S17", "F17", "W18"))
ggplot(rcw, aes(x = Semester_Date, y = Count, color = Department)) +
geom_point(show.legend = FALSE) +
geom_line(show.legend = FALSE) +
facet_wrap(~ Department, nrow = 2) +
scale_x_date(breaks = c("2016-04-01", "2016-09-01", "2017-01-01", "2017-04-01", "2017-09-01","2018-01-01"),
labels = c("S16", "F16", "W17", "S17", "F17", "W18"))
ggplot(rcw, aes(x = Semester_Date, y = Count, color = Department)) +
geom_point(show.legend = FALSE) +
geom_line(show.legend = FALSE) +
facet_wrap(~ Department, nrow = 2) +
scale_x_date(breaks = as.Date(c("2016-04-01", "2016-09-01", "2017-01-01", "2017-04-01", "2017-09-01","2018-01-01")),
labels = c("S16", "F16", "W17", "S17", "F17", "W18"))
ggplot(rcw, aes(x = Semester_Date, y = Count, color = Department)) +
geom_point() +
geom_line() +
facet_wrap(~ Department, nrow = 2) +
scale_x_date(breaks = as.Date(c("2016-04-01", "2016-09-01", "2017-01-01", "2017-04-01", "2017-09-01","2018-01-01")),
labels = c("S16", "F16", "W17", "S17", "F17", "W18")) +
theme(legend.position = "none")
ggplot(rcw, aes(x = Semester_Date, y = Count, color = Department)) +
geom_point() +
geom_line() +
scale_x_date(breaks = as.Date(c("2016-04-01", "2016-09-01", "2017-01-01", "2017-04-01", "2017-09-01","2018-01-01")),
labels = c("S16", "F16", "W17", "S17", "F17", "W18"))
install.packages("nycflights")
install.packages("nycflights13")
library(nycflights13)
?flights
View(flights)
glimpse(flights)
# QQ
ggplot(flights) + geom_histogram(dep_time)
# QQ
ggplot(flights) +
geom_histogram(dep_time)
# QQ
ggplot(flights) + geom_histogram(aes(dep_time))
ggplot(flights) + geom_histogram(aes(dep_delay))
ggplot(flights) + geom_point(aes(dep_time, dep_delay))
ggplot(flights) + geom_bin2d(aes(dep_time, dep_delay))
ggplot(flights) + geom_hex(aes(dep_time, dep_delay))
ggplot(flights) + geom_bin2d(aes(dep_time, dep_delay))
ggplot(flights) + geom_histogram(aes(dep_delay))
ggplot(flights) + geom_bar(aes(origin))
# QQ -----------------------
ggplot(flights) + geom_histogram(aes(dep_time))
ggplot(flights) + geom_histogram(aes(dep_delay))
ggplot(flights) + geom_boxplot(aes(dep_time))
ggplot(flights) + geom_boxplot(aes(dep_delay))
sum(is.na(flights$dep_delay))
ggplot(flights) + geom_boxplot(aes(dep_time))
ggplot(flights) + geom_histogram(aes(dep_delay))
ggplot(flights) + geom_bar(aes(origin))
ggplot(flights) + geom_point(aes(origin, dep_delay))
ggplot(flights) + geom_violin(aes(origin, dep_delay))
gplot(flights) + geom_dotplot(aes(origin, dep_delay))
ggplot(flights) + geom_dotplot(aes(origin, dep_delay))
ggplot(flights) + geom_dotplot(aes(x=origin, y=dep_delay))
ggplot(flights) + geom_dotplot(aes(x=origin, y=dep_delay))
ggplot(flights) + geom_violin(aes(x=origin, y=dep_delay))
ggplot(flights) + geom_boxplot(aes(x=origin, y=dep_delay))
ggplot(flights) + geom_violin(aes(x=origin, y=dep_delay))
install.packages("gapminder")
library(gapminder)
?gapminder
View(gapminder)
glimpse(gapminder)
?filter
gap <- filter(.data = gapminder, country != "Kuait")
gap <- filter(.data = gapminder, country != "Kuwait")
